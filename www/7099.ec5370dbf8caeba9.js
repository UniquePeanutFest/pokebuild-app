"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[7099],{4843:(N,w,f)=>{f.d(w,{_:()=>O});var g=f(9350),A=f(7707);function O($,l){const E="object"==typeof l;return new Promise((B,C)=>{const y=new A.Ms({next:D=>{B(D),y.unsubscribe()},error:C,complete:()=>{E?B(l.defaultValue):C(new g.G)}});$.subscribe(y)})}},7099:(N,w,f)=>{f.d(w,{R:()=>C});var g=f(467),A=f(7673),O=f(8141),$=f(9437),l=f(4843),E=f(1360),B=f(7643);let C=(()=>{var y;class D{constructor(e){this.http=e,this.baseUrl="https://pokeapi.co/api/v2",this.cache={},this.cacheTimeout=3e5,this.pokemonGenerations=[{id:1,name:"generation-i",displayName:"Generaci\xf3n I",region:"Kanto",rangeStart:1,rangeEnd:151},{id:2,name:"generation-ii",displayName:"Generaci\xf3n II",region:"Johto",rangeStart:152,rangeEnd:251},{id:3,name:"generation-iii",displayName:"Generaci\xf3n III",region:"Hoenn",rangeStart:252,rangeEnd:386},{id:4,name:"generation-iv",displayName:"Generaci\xf3n IV",region:"Sinnoh",rangeStart:387,rangeEnd:493},{id:5,name:"generation-v",displayName:"Generaci\xf3n V",region:"Unova",rangeStart:494,rangeEnd:649},{id:6,name:"generation-vi",displayName:"Generaci\xf3n VI",region:"Kalos",rangeStart:650,rangeEnd:721},{id:7,name:"generation-vii",displayName:"Generaci\xf3n VII",region:"Alola",rangeStart:722,rangeEnd:809},{id:8,name:"generation-viii",displayName:"Generaci\xf3n VIII",region:"Galar",rangeStart:810,rangeEnd:898},{id:9,name:"generation-ix",displayName:"Generaci\xf3n IX",region:"Paldea",rangeStart:899,rangeEnd:1010}],this.typeEffectiveness={normal:{strengths:[],weaknesses:["rock","steel"],immunities:["ghost"]},fire:{strengths:["grass","ice","bug","steel"],weaknesses:["fire","water","rock","dragon"],immunities:[]},water:{strengths:["fire","ground","rock"],weaknesses:["water","grass","dragon"],immunities:[]},electric:{strengths:["water","flying"],weaknesses:["electric","grass","dragon"],immunities:["ground"]},grass:{strengths:["water","ground","rock"],weaknesses:["fire","grass","poison","flying","bug","dragon","steel"],immunities:[]},ice:{strengths:["grass","ground","flying","dragon"],weaknesses:["fire","water","ice","steel"],immunities:[]},fighting:{strengths:["normal","ice","rock","dark","steel"],weaknesses:["poison","flying","psychic","bug","fairy"],immunities:["ghost"]},poison:{strengths:["grass","fairy"],weaknesses:["poison","ground","rock","ghost"],immunities:["steel"]},ground:{strengths:["fire","electric","poison","rock","steel"],weaknesses:["grass","bug"],immunities:["flying"]},flying:{strengths:["grass","fighting","bug"],weaknesses:["electric","rock","steel"],immunities:[]},psychic:{strengths:["fighting","poison"],weaknesses:["psychic","steel"],immunities:["dark"]},bug:{strengths:["grass","psychic","dark"],weaknesses:["fire","fighting","poison","flying","ghost","steel","fairy"],immunities:[]},rock:{strengths:["fire","ice","flying","bug"],weaknesses:["fighting","ground","steel"],immunities:[]},ghost:{strengths:["psychic","ghost"],weaknesses:["dark"],immunities:["normal"]},dragon:{strengths:["dragon"],weaknesses:["steel"],immunities:["fairy"]},dark:{strengths:["psychic","ghost"],weaknesses:["fighting","dark","fairy"],immunities:[]},steel:{strengths:["ice","rock","fairy"],weaknesses:["fire","water","electric","steel"],immunities:[]},fairy:{strengths:["fighting","dragon","dark"],weaknesses:["fire","poison","steel"],immunities:[]}},this.pokemonTypes=[{name:"bug",color:"#92BC2C",selected:!1},{name:"dark",color:"#595761",selected:!1},{name:"dragon",color:"#0C69C8",selected:!1},{name:"electric",color:"#F2D94E",selected:!1},{name:"fairy",color:"#EE90E6",selected:!1},{name:"fighting",color:"#D3425F",selected:!1},{name:"fire",color:"#FBA54C",selected:!1},{name:"flying",color:"#A1BBEC",selected:!1},{name:"ghost",color:"#5F6DBC",selected:!1},{name:"grass",color:"#5FBD58",selected:!1},{name:"ground",color:"#DA7C4D",selected:!1},{name:"ice",color:"#75D0C1",selected:!1},{name:"normal",color:"#A0A29F",selected:!1},{name:"poison",color:"#B763CF",selected:!1},{name:"psychic",color:"#FA8581",selected:!1},{name:"rock",color:"#C9BB8A",selected:!1},{name:"steel",color:"#5695A3",selected:!1},{name:"water",color:"#539DDF",selected:!1}]}getPokemons(e=0,t=20){return this.getCachedData(`${this.baseUrl}/pokemon?limit=${t}&offset=${e}`)}getPokemonByNameOrId(e){const t=`${this.baseUrl}/pokemon/${e.toString().toLowerCase()}`;return this.getCachedData(t)}getPokemonSpecies(e){return this.getCachedData(`${this.baseUrl}/pokemon-species/${e}`)}getAbilityDetails(e){return this.getCachedData(e)}getMoveDetails(e){return this.getCachedData(e)}getPokemonEvolutionChain(e){return this.getCachedData(e)}getPokemonsByType(e){var t=this;return(0,g.A)(function*(){try{const s=(yield(0,l._)(t.http.get(`${t.baseUrl}/type/${e}`))).pokemon.slice(0,100).map(i=>(0,l._)(t.getPokemonByNameOrId(i.pokemon.name)));return yield Promise.all(s)}catch(r){return console.error(`Error fetching Pok\xe9mon of type ${e}:`,r),[]}})()}searchPokemon(e){var t=this;return(0,g.A)(function*(){const s=(yield(0,l._)(t.getPokemons(0,1200))).results.filter(a=>a.name.toLowerCase().includes(e.toLowerCase())).slice(0,20);return yield Promise.all(s.map(a=>(0,l._)(t.getPokemonByNameOrId(a.name))))})()}getCachedData(e){const t=this.cache[e];return t&&Date.now()-t.timestamp<this.cacheTimeout?(0,A.of)(t.data):this.http.get(e).pipe((0,O.M)(r=>{this.cache[e]={data:r,timestamp:Date.now()}}),(0,$.W)(r=>{throw console.error("Error en la llamada a la API:",r),r}))}getSprites(e){return{default:e.sprites.front_default,shiny:e.sprites.front_shiny,official:e.sprites.other["official-artwork"].front_default,animated:e.sprites.versions["generation-v"]["black-white"].animated.front_default,home:e.sprites.other.home.front_default}}getTypeColor(e){return e&&{normal:"#A8A878",fire:"#F08030",water:"#6890F0",electric:"#F8D030",grass:"#78C850",ice:"#98D8D8",fighting:"#C03028",poison:"#A040A0",ground:"#E0C068",flying:"#A890F0",psychic:"#F85888",bug:"#A8B820",rock:"#B8A038",ghost:"#705898",dragon:"#7038F8",dark:"#705848",steel:"#B8B8D0",fairy:"#EE99AC"}[e.toLowerCase()]||"#777777"}clearCache(){this.cache={}}clearPokemonCache(e){const t=`${this.baseUrl}/pokemon/${e.toString().toLowerCase()}`;delete this.cache[t]}getPokemonsByTypes(e){var t=this;return(0,g.A)(function*(){if(0===e.length){const i=yield(0,l._)(t.getPokemons(0,20));return Promise.all(i.results.map(a=>(0,l._)(t.getPokemonByNameOrId(a.name))))}let s=[...yield t.getPokemonsByType(e[0])];for(let i=1;i<e.length;i++){const a=yield t.getPokemonsByType(e[i]);s=s.filter(n=>a.some(o=>o.id===n.id))}return s.slice(0,20)})()}getGigantamaxSprite(e){var t,r;return e.sprites.gmax?e.sprites.gmax:e.name.includes("-gmax")?(null===(r=e.sprites.other)||void 0===r||null===(r=r["official-artwork"])||void 0===r?void 0:r.front_default)||e.sprites.front_default||null:(null===(t=e.sprites.other)||void 0===t||null===(t=t["official-artwork"])||void 0===t?void 0:t.front_default)||e.sprites.front_default||null}getPokemonVariants(e){var t=this;return(0,g.A)(function*(){try{const n=yield(0,l._)(t.getPokemonSpecies(e)),o=n.varieties||[],m=[];let u=null;const p={},I=(n.flavor_text_entries||[]).find(h=>h.text&&(h.text.includes("Mega")||h.text.includes("mega")));I&&(p.default=I.text);for(const h of o)if(h.pokemon.name.includes("-mega")){const c=yield(0,l._)(t.getPokemonByNameOrId(h.pokemon.name)),v=h.pokemon.name;let k="Requiere Mega Piedra";k=v.includes("mega-x")?"Requiere Mega Piedra X":v.includes("mega-y")?"Requiere Mega Piedra Y":`Requiere ${c.name.split("-mega")[0]}ita`;const d=[];for(const P of c.abilities)try{var r,s;const _=yield(0,l._)(t.getAbilityDetails(P.ability.url)),R=(null===(r=_.flavor_text_entries.find(x=>"es"===x.language.name))||void 0===r?void 0:r.flavor_text)||(null===(s=_.flavor_text_entries.find(x=>"en"===x.language.name))||void 0===s?void 0:s.flavor_text)||"No hay descripci\xf3n disponible";d.push({name:P.ability.name,description:R})}catch(_){console.error("Error obteniendo detalles de habilidad para Mega Evoluci\xf3n:",_)}m.push({id:c.id,name:c.name,sprite:c.sprites.front_default,stats:c.stats,abilities:d,types:c.types,evolution_method:k})}else if(h.pokemon.name.includes("-gmax")){const c=yield(0,l._)(t.getPokemonByNameOrId(h.pokemon.name)),v=[];for(const k of c.abilities)try{var i,a;const d=yield(0,l._)(t.getAbilityDetails(k.ability.url)),P=(null===(i=d.flavor_text_entries.find(_=>"es"===_.language.name))||void 0===i?void 0:i.flavor_text)||(null===(a=d.flavor_text_entries.find(_=>"en"===_.language.name))||void 0===a?void 0:a.flavor_text)||"No hay descripci\xf3n disponible";v.push({name:k.ability.name,description:P})}catch(d){console.error("Error obteniendo detalles de habilidad para Gigantamax:",d)}u={id:c.id,name:c.name,sprite:t.getGigantamaxSprite(c)||c.sprites.front_default,stats:c.stats,abilities:v,types:c.types,evolution_method:"Requiere Factor Gigamax"}}return{mega:m,gigamax:u}}catch(n){return console.error("Error getting Pokemon variants:",n),{mega:[],gigamax:null}}})()}calculateTypeWeaknesses(e){if(!e||0===e.length)return{superEffective:[],effective:[],resistant:[],superResistant:[],immune:[]};const t={};this.pokemonTypes.forEach(s=>{t[s.name]=1}),e.forEach(s=>{const a=this.typeEffectiveness[s.type.name];a&&(a.weaknesses.forEach(n=>{t[n]*=2}),a.strengths.forEach(n=>{t[n]/=2}),a.immunities.forEach(n=>{t[n]=0}))});const r={superEffective:[],effective:[],resistant:[],superResistant:[],immune:[]};return Object.entries(t).forEach(([s,i])=>{0===i?r.immune.push(s):.25===i?r.superResistant.push(s):.5===i?r.resistant.push(s):2===i?r.effective.push(s):4===i&&r.superEffective.push(s)}),r}getItems(e=0,t=20){return this.getCachedData(`${this.baseUrl}/item?offset=${e}&limit=${t}`)}getItemByNameOrId(e){return this.getCachedData(`${this.baseUrl}/item/${e}`)}getItemsByCategory(e){return this.getCachedData(`${this.baseUrl}/item-category/${e}`)}searchItems(e){var t=this;return(0,g.A)(function*(){const r=e.toLowerCase().trim();let s=[];try{try{const n=yield(0,l._)(t.getItemByNameOrId(r));return s.push(n),s}catch{}const a=(yield(0,l._)(t.getItems(0,100))).results.filter(n=>n.name.includes(r)).map(n=>(0,l._)(t.getItemByNameOrId(n.name)));return s=yield Promise.all(a),s}catch(i){return console.error("Error al buscar items:",i),[]}})()}getBattleItems(){var e=this;return(0,g.A)(function*(){try{const r=(yield(0,l._)(e.getItemsByCategory("battle"))).items.map(s=>(0,l._)(e.getItemByNameOrId(s.name)));return yield Promise.all(r)}catch(t){return console.error("Error al obtener battle items:",t),[]}})()}getHoldItems(){var e=this;return(0,g.A)(function*(){try{const r=(yield(0,l._)(e.getItemsByCategory("held-items"))).items.map(s=>(0,l._)(e.getItemByNameOrId(s.name)));return yield Promise.all(r)}catch(t){return console.error("Error al obtener hold items:",t),[]}})()}getItemName(e){return e.name.replace(/-/g," ")}getRecommendedItemsForPokemon(e){var t=this;return(0,g.A)(function*(){try{const r=yield t.getHoldItems();let s=t.determinePokemonCategory(e);return t.filterItemsByCategory(r,s)}catch(r){return console.error("Error al obtener items recomendados:",r),[]}})()}determinePokemonCategory(e){var t,r,s,i,a,n,o;if(!e||!e.stats)return"general";const m=(null===(t=e.stats.find(d=>"attack"===d.stat.name))||void 0===t?void 0:t.base_stat)||0,u=(null===(r=e.stats.find(d=>"special-attack"===d.stat.name))||void 0===r?void 0:r.base_stat)||0,p=(null===(s=e.stats.find(d=>"defense"===d.stat.name))||void 0===s?void 0:s.base_stat)||0,b=(null===(i=e.stats.find(d=>"special-defense"===d.stat.name))||void 0===i?void 0:i.base_stat)||0,I=(null===(a=e.stats.find(d=>"speed"===d.stat.name))||void 0===a?void 0:a.base_stat)||0,h=(null===(n=e.stats.find(d=>"hp"===d.stat.name))||void 0===n?void 0:n.base_stat)||0;let c="general";m>u&&m>100?c="physical":u>m&&u>100&&(c="special"),p>100&&b<80?c="physical-tank":b>100&&p<80?c="special-tank":p>90&&b>90&&(c="tank"),h>100&&p>80&&b>80&&(c="bulky"),I>100&&(m>90||u>90)&&(c="sweeper"),(h<70||p<70&&b<70)&&(c="frail");const v=["swords-dance","dragon-dance","nasty-plot","calm-mind","quiver-dance"];return(null===(o=e.moves)||void 0===o?void 0:o.some(d=>v.includes(d.move.name)))&&(c="setup"),c}filterItemsByCategory(e,t){const r={physical:["choice-band","muscle-band","expert-belt","life-orb"],special:["choice-specs","wise-glasses","expert-belt","life-orb"],tank:["leftovers","rocky-helmet","black-sludge","sitrus-berry"],bulky:["leftovers","rocky-helmet","eviolite","assault-vest"],"physical-tank":["rocky-helmet","leftovers","eviolite"],"special-tank":["assault-vest","leftovers","light-clay"],sweeper:["life-orb","expert-belt","focus-sash","choice-scarf"],frail:["focus-sash","focus-band","sitrus-berry"],setup:["focus-sash","white-herb","mental-herb","power-herb"]},i=t in r?r[t]:["leftovers","sitrus-berry","life-orb","choice-scarf"];return e.filter(a=>i.some(n=>a.name.includes(n)||a.names.some(o=>o.name.toLowerCase().includes(n)))).slice(0,3)}getPokemonsByGeneration(e){var t=this;return(0,g.A)(function*(){try{const r=t.pokemonGenerations.find(o=>o.id===e);if(!r)throw new Error(`Generaci\xf3n ${e} no encontrada`);const s=Array.from({length:r.rangeEnd-r.rangeStart+1},(o,m)=>r.rangeStart+m),i=20,a=[];for(let o=0;o<s.length;o+=i){const m=s.slice(o,o+i);a.push(m)}let n=[];for(const o of a){const m=yield Promise.all(o.map(u=>(0,l._)(t.getPokemonByNameOrId(u.toString()))));n=[...n,...m]}return n}catch(r){return console.error("Error al obtener Pok\xe9mon de la generaci\xf3n:",r),[]}})()}getPokemonsByRange(e,t){var r=this;return(0,g.A)(function*(){try{const s=Array.from({length:t},(a,n)=>e+n);return yield Promise.all(s.map(a=>(0,l._)(r.getPokemonByNameOrId(a.toString()))))}catch(s){return console.error("Error al obtener Pok\xe9mon en el rango:",s),[]}})()}getPokemonsByTypesAndGeneration(e,t){var r=this;return(0,g.A)(function*(){try{let s=[];if(0===e.length&&!t)return[];if(e.length>0){const i=e.map(n=>r.getPokemonsByType(n)),a=yield Promise.all(i);if(a.length>0){let n=a[0];for(let o=1;o<a.length;o++)n=n.filter(m=>a[o].some(u=>u.id===m.id));s=n}}if(t){const i=yield r.getPokemonsByGeneration(t);s=e.length>0?s.filter(a=>i.some(n=>n.id===a.id)):i}return s}catch(s){throw console.error("Error fetching filtered Pok\xe9mon:",s),s}})()}getPokemonsByTypesAndGenerations(e,t){var r=this;return(0,g.A)(function*(){try{let s=[];if(0===e.length&&0===t.length)return[];if(e.length>0){const i=e.map(n=>r.getPokemonsByType(n)),a=yield Promise.all(i);if(a.length>0){let n=a[0];for(let o=1;o<a.length;o++)n=n.filter(m=>a[o].some(u=>u.id===m.id));s=n}}if(t.length>0){const i=t.map(o=>r.getPokemonsByGeneration(o)),a=yield Promise.all(i);let n=[];a.forEach(o=>{n=[...n,...o]}),n=n.filter((o,m,u)=>m===u.findIndex(p=>p.id===o.id)),s=e.length>0?s.filter(o=>n.some(m=>m.id===o.id)):n}return s}catch(s){throw console.error("Error fetching filtered Pok\xe9mon:",s),s}})()}searchPokemonByNameOrNumber(e){var t=this;return(0,g.A)(function*(){try{if(e=e.toLowerCase().trim(),/^\d+$/.test(e)){const i=yield(0,l._)(t.getPokemonByNameOrId(e));return[{name:i.name,url:`${t.baseUrl}/pokemon/${i.id}/`}]}return(yield(0,l._)(t.getPokemons(0,1e3))).results.filter(i=>i.name.toLowerCase().includes(e)).slice(0,20)}catch(r){return console.error("Error en la b\xfasqueda:",r),[]}})()}getBerries(e=0,t=20){return this.getCachedData(`${this.baseUrl}/berry?offset=${e}&limit=${t}`)}getBerryByNameOrId(e){return this.getCachedData(`${this.baseUrl}/berry/${e}`)}getBerryFirmnesses(e=0,t=20){return this.getCachedData(`${this.baseUrl}/berry-firmness?offset=${e}&limit=${t}`)}getBerryFirmnessById(e){return this.getCachedData(`${this.baseUrl}/berry-firmness/${e}`)}getBerryFlavors(e=0,t=20){return this.getCachedData(`${this.baseUrl}/berry-flavor?offset=${e}&limit=${t}`)}getBerryFlavorById(e){return this.getCachedData(`${this.baseUrl}/berry-flavor/${e}`)}getAllBerries(){var e=this;return(0,g.A)(function*(){try{const r=(yield(0,l._)(e.getBerries(0,40))).results.map(function(){var i=(0,g.A)(function*(a){const n=yield(0,l._)(e.getBerryByNameOrId(a.name));try{const o=`${a.name}-berry`,m=yield(0,l._)(e.getItemByNameOrId(o));return m.is_berry=!0,m.berryInfo=n,m}catch(o){return console.error(`Error obteniendo objeto para baya ${a.name}:`,o),null}});return function(a){return i.apply(this,arguments)}}());return(yield Promise.all(r)).filter(i=>null!==i)}catch(t){return console.error("Error obteniendo bayas:",t),[]}})()}}return(y=D).\u0275fac=function(e){return new(e||y)(E.KVO(B.Qq))},y.\u0275prov=E.jDH({token:y,factory:y.\u0275fac,providedIn:"root"}),D})()}}]);